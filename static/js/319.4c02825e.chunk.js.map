{"version":3,"file":"static/js/319.4c02825e.chunk.js","mappings":"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","sources":["images/left-arrow.svg","components/ReturnButton.js","../node_modules/@chakra-ui/layout/dist/chunk-SRMZVY4F.mjs","components/ExpandableText.js","components/MovieCard.js","pages/MovieDetails.js"],"sourcesContent":["var _g, _g2, _g3;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLeftArrow(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"#fff\",\n    id: \"Capa_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: \"800px\",\n    height: \"800px\",\n    viewBox: \"0 0 287.863 287.863\",\n    xmlSpace: \"preserve\",\n    stroke: \"#fff\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"SVGRepo_bgCarrier\",\n    strokeWidth: 0\n  })), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"SVGRepo_tracerCarrier\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _g3 || (_g3 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"SVGRepo_iconCarrier\"\n  }, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M282.734,275.926c6.732-2.448,6.732-12.853,0.612-14.688l0,0c4.896-13.464-27.54-41.004-34.884-49.571 c-12.853-15.301-25.092-30.601-36.108-47.124c-10.403-15.912-12.239-22.033-0.611-37.333c21.42-26.928,47.124-50.796,64.26-80.784 c3.672-6.732,13.464-40.392-5.508-33.66c0,0,0,0-0.612,0c-1.224-2.448-3.672-3.672-7.344-2.448 C176.858,53.157,88.118,91.101,4.274,137.613c-4.284,2.448-6.12,9.792-1.836,12.853c49.572,39.168,110.772,54.468,166.465,82.62 C197.055,247.773,248.463,287.554,282.734,275.926z M171.963,125.373c-0.612-0.612-0.612-0.612-1.224-1.224l0,0 c0.611-0.612,1.224-1.224,1.836-1.836c1.836-1.224,3.06-1.836,4.896-3.06c-1.224,1.836-2.448,3.06-3.672,4.896 C173.187,124.761,172.575,125.373,171.963,125.373z\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLeftArrow);\nexport default __webpack_public_path__ + \"static/media/left-arrow.ed92aa90dd649aad6079a9ea0e55420a.svg\";\nexport { ForwardRef as ReactComponent };","import { Box, Image, Text } from '@chakra-ui/react';\r\nimport { NavLink, useLocation } from 'react-router-dom';\r\n\r\nimport Arrow from '../images/left-arrow.svg';\r\n\r\nexport const ReturnButton = () => {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <NavLink\r\n      to={location?.state?.from ?? '/'}\r\n      type=\"button\"\r\n    >\r\n      <Box display='flex' width='1rem' fontWeight='500' _hover={{ width: '1.2rem', color: 'orange.500', fontWeight: '700' }}>\r\n        <Image src={Arrow} width='inherit' marginRight='0.5rem' />\r\n        <Text>back</Text>\r\n      </Box>\r\n    </NavLink>\r\n  );\r\n};\r\n","// src/container.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Container = forwardRef(function Container2(props, ref) {\n  const { className, centerContent, ...rest } = omitThemingProps(props);\n  const styles = useStyleConfig(\"Container\", props);\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      className: cx(\"chakra-container\", className),\n      ...rest,\n      __css: {\n        ...styles,\n        ...centerContent && {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\"\n        }\n      }\n    }\n  );\n});\nContainer.displayName = \"Container\";\n\nexport {\n  Container\n};\n","import { Text } from '@chakra-ui/react';\r\nimport React, { useState } from 'react'\r\n\r\nconst ExpandableText = ({ text }) => {\r\n  const [show, setShow] = useState(false);\r\n  const handleToggle = () => setShow(!show);\r\n  const ofLines = show ? 'auto' : [1, 2, 3];\r\n\r\n  return (\r\n    <>\r\n      <Text noOfLines={ofLines} isOpen={show} onClick={handleToggle}>{text}</Text>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ExpandableText","import { Heading, Container, Text, Box, Image } from '@chakra-ui/react';\r\nimport ExpandableText from './ExpandableText';\r\n\r\nexport const MovieCard = ({ movie }) => {\r\n  const {\r\n    poster_path,\r\n    title,\r\n    tagline,\r\n    name,\r\n    release_date,\r\n    vote_average,\r\n    vote_count,\r\n    production_companies,\r\n    overview,\r\n    genres,\r\n  } = movie;\r\n\r\n  const companyLogo = production_companies[0]['logo_path'];\r\n  const releaseDate = new Date(release_date);\r\n  const [month, day, year] = [\r\n    releaseDate.toString().slice(3, 8),\r\n    releaseDate.getDate(),\r\n    releaseDate.getFullYear(),\r\n  ];\r\n  if (!poster_path) {\r\n    console.log('no path');\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Container as='section' maxWidth='4xl' borderRadius='lg' p='4'>\r\n        <Box display='flex'>\r\n          <Box >\r\n            <Image\r\n              borderRadius='lg'\r\n              objectFit='cover'\r\n              maxWidth='480px'\r\n              maxHeight='362px'\r\n              src={\r\n                poster_path\r\n                  ? `https://image.tmdb.org/t/p/w500${poster_path}`\r\n                  : `http://blog.aspneter.com/Images/no-thumb.jpg`\r\n              }\r\n              alt={title || name}\r\n            />\r\n          </Box>\r\n          <Box ml='4' position='relative'>\r\n            <Heading as='h2' size='lg' >\r\n              {title || name}\r\n            </Heading>\r\n            {tagline && <Text as='cite'>{tagline}</Text>}\r\n            {companyLogo && (\r\n              <Box maxWidth='4rem' position='absolute' top='1rem' right='1rem'>\r\n                <Image src={`https://image.tmdb.org/t/p/w200${companyLogo}`} />\r\n              </Box>\r\n            )}\r\n            <Heading as='h3' size='md' color='white' marginTop='0.5rem'>Release date: </Heading>\r\n            <Text>{month} {day}, {year}</Text>\r\n            <Heading as='h3' size='md' color='white' marginTop='0.5rem'>Rating: </Heading>\r\n            <Text><b>{vote_average.toFixed(2)}</b>  ( {vote_count.toLocaleString('fr-FR')} ) </Text>\r\n            <Heading as='h3' size='md' color='white' marginTop='0.5rem'>Genres:</Heading>\r\n            <Text>{genres.map(genre => genre.name).join(', ')}</Text>\r\n            {overview && (\r\n              <>\r\n                <Heading as='h3' size='md' color='white' marginTop='0.5rem'>Overview: </Heading>\r\n                <ExpandableText text={overview} />\r\n              </>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n","// сторінка з детальною інформацією про кінофільм\r\n\r\nimport { Suspense, useEffect, useState } from \"react\";\r\nimport { Outlet, Link, useLocation, useParams } from \"react-router-dom\";\r\n\r\nimport { getMovieById } from \"services/services\";\r\nimport { MovieCard } from \"../components/MovieCard\";\r\nimport { ReturnButton } from \"../components/ReturnButton\";\r\n\r\nconst MovieDetails = () => {\r\n  const location = useLocation();\r\n  const [movie, setMovie] = useState(null);\r\n  const {movieId}  = useParams();\r\n\r\n  useEffect(() => {\r\n    getMovieById(movieId)\r\n      .then(data => {\r\n      setMovie(data);\r\n    });\r\n    \r\n  }, [movieId]);\r\n\r\n\r\n  if (!movie) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ReturnButton />\r\n      <MovieCard movie={movie} />\r\n      <h2>Additional information</h2>\r\n      <ul>\r\n        <li>\r\n          <Link state={location.state} to=\"cast\">\r\n            Cast\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link state={location.state} to=\"reviews\">\r\n            Review\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n      <hr />\r\n      <Suspense fallback={null}>\r\n       <Outlet/>\r\n      </Suspense>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieDetails;"],"names":["ReturnButton","location","useLocation","to","state","from","type","display","width","fontWeight","_hover","color","src","Arrow","marginRight","Container","forwardRef","props","ref","omitThemingProps","className","centerContent","rest","styles","useStyleConfig","jsx","chakra","cx","__css","flexDirection","alignItems","displayName","text","useState","show","setShow","ofLines","noOfLines","isOpen","onClick","MovieCard","movie","poster_path","title","tagline","name","release_date","vote_average","vote_count","production_companies","overview","genres","companyLogo","releaseDate","Date","toString","slice","getDate","getFullYear","month","day","year","console","log","as","maxWidth","borderRadius","p","objectFit","maxHeight","alt","ml","position","size","top","right","marginTop","toFixed","toLocaleString","map","genre","join","setMovie","movieId","useParams","useEffect","getMovieById","then","data","Suspense","fallback"],"sourceRoot":""}