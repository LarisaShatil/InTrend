{"version":3,"file":"static/js/352.39ec7296.chunk.js","mappings":"2SAsBA,EAjBiB,SAAC,GAAe,IAAbA,EAAY,EAAZA,MAElB,OACE,UAAC,IAAD,CAAqBC,OAAO,kBAAkBC,SAAS,SAASC,gBAAgB,OAAhF,WACE,SAAC,IAAD,CACEC,UAAU,QACVC,IAAG,yCAAoCL,EAAMM,cAC7CC,IAAKP,EAAMQ,QAEb,UAAC,IAAD,CAAUC,SAAS,KAAKC,MAAM,WAA9B,WACE,SAAC,IAAD,CAASC,GAAG,KAAKC,KAAK,KAAKC,OAAO,cAAlC,SAAiDb,EAAMQ,QACvD,SAACM,EAAA,EAAD,CAAgBC,KAAMf,EAAMgB,WAAa,UAAWC,OAAQ,SARrDjB,EAAMkB,KCAfC,EAAW,CACfC,MAAM,EACNC,UAAU,EACVC,MAAO,IACPC,aAAc,EACdC,eAAgB,EAChBC,aAAc,EACdC,WAAY,CACV,CACEC,WAAY,KACZR,SAAU,CACRI,aAAc,EACdC,eAAgB,EAChBH,UAAU,EACVD,MAAM,IAGV,CACEO,WAAY,IACZR,SAAU,CACRI,aAAc,EACdC,eAAgB,EAChBC,aAAc,IAGlB,CACEE,WAAY,IACZR,SAAU,CACRI,aAAc,EACdC,eAAgB,MAmBxB,EAbkB,SAAC,GAAc,IAAZI,EAAW,EAAXA,KACnB,OACE,SAAC,KAAD,WACE,SAAC,KAAD,kBAAYT,GAAZ,aACGS,EAAKC,KAAI,SAAA7B,GAAK,OACbA,EAAMM,eAAgB,SAAC,EAAD,CAA0BN,MAAOA,GAAlBA,EAAMkB,aCvBrD,EAnBa,WACX,OAAwBY,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAYH,GAASI,MAAK,SAAAT,GACxBI,EAAQJ,QAET,CAACK,IAECF,GAKD,SAACO,EAAD,CAAWV,KAAMG,IAJZ,O,gECFX,IAZuB,SAAC,GAAsB,IAApBhB,EAAmB,EAAnBA,KAAME,EAAa,EAAbA,OAC9B,GAAwBa,EAAAA,EAAAA,WAAS,GAAjC,eAAOS,EAAP,KAAaC,EAAb,KAEMC,EAAUF,EAAO,OAAS,CAACtB,GAEjC,OACE,+BACE,SAAC,IAAD,CAAMP,MAAM,UAAUD,SAAS,UAAUiC,UAAWD,EAASE,QAL5C,kBAAMH,GAASD,IAKhC,SAAqFxB","sources":["components/CastItem.js","components/Slider.js","components/Cast.js","components/ExpandableText.js"],"sourcesContent":["import React from 'react'\r\nimport { Card, CardBody, Image, Heading } from '@chakra-ui/react'\r\n\r\nimport ExpandableText from './ExpandableText'\r\n\r\nconst CastItem = ({ actor }) => {\r\n\r\n  return (\r\n    <Card key={actor.id} margin='0 0.5rem 0.5rem' overflow='hidden' backgroundColor='none'>\r\n      <Image\r\n        objectFit='cover' \r\n        src={`https://image.tmdb.org/t/p/w500${actor.profile_path}`}\r\n        alt={actor.name}\r\n      />\r\n      <CardBody fontSize='xs' color='blue.100'>\r\n        <Heading as='h4' size='xs' filter='blur(0.4px)'>{actor.name}</Heading>\r\n        <ExpandableText text={actor.character || \"No info\"} number={1} />\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default CastItem","import { Box } from '@chakra-ui/react'\r\nimport React from 'react'\r\nimport Slider from 'react-slick';\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nimport CastItem from './CastItem';\r\n\r\nconst settings = {\r\n  dots: true,\r\n  infinite: false,\r\n  speed: 500,\r\n  slidesToShow: 4,\r\n  slidesToScroll: 4,\r\n  initialSlide: 0,\r\n  responsive: [\r\n    {\r\n      breakpoint: 1024,\r\n      settings: {\r\n        slidesToShow: 3,\r\n        slidesToScroll: 3,\r\n        infinite: true,\r\n        dots: true,\r\n      },\r\n    },\r\n    {\r\n      breakpoint: 600,\r\n      settings: {\r\n        slidesToShow: 2,\r\n        slidesToScroll: 2,\r\n        initialSlide: 2,\r\n      },\r\n    },\r\n    {\r\n      breakpoint: 480,\r\n      settings: {\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n      },\r\n    },\r\n  ],\r\n};\r\n\r\nconst SliderBox = ({ data }) => {\r\n  return (\r\n    <Box>\r\n      <Slider {...settings}>\r\n        {data.map(actor => (\r\n          actor.profile_path && <CastItem key={actor.id}  actor={actor} />\r\n        ))}\r\n      </Slider>\r\n    </Box>\r\n   \r\n  )\r\n}\r\n\r\nexport default SliderBox  ","import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getCastInfo } from 'services/services';\r\n\r\nimport SliderBox from './Slider';\r\n\r\nconst Cast = () => {\r\n  const [cast, setCast] = useState(null);\r\n  const { movieId } = useParams();\r\n\r\n  useEffect(() => {\r\n    getCastInfo(movieId).then(data => {\r\n      setCast(data);\r\n    });\r\n  }, [movieId]);\r\n\r\n  if (!cast) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n      <SliderBox data={cast} />\r\n  );\r\n};\r\n\r\nexport default Cast;\r\n","import React, { useState } from 'react'\r\nimport { Text } from '@chakra-ui/react';\r\n\r\nconst ExpandableText = ({ text, number }) => {\r\n  const [show, setShow] = useState(false);\r\n  const handleToggle = () => setShow(!show);\r\n  const ofLines = show ? 'auto' : [number];\r\n\r\n  return (\r\n    <>\r\n      <Text color='inherit' fontSize='inherit' noOfLines={ofLines} onClick={handleToggle}>{text}</Text>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ExpandableText"],"names":["actor","margin","overflow","backgroundColor","objectFit","src","profile_path","alt","name","fontSize","color","as","size","filter","ExpandableText","text","character","number","id","settings","dots","infinite","speed","slidesToShow","slidesToScroll","initialSlide","responsive","breakpoint","data","map","useState","cast","setCast","movieId","useParams","useEffect","getCastInfo","then","Slider","show","setShow","ofLines","noOfLines","onClick"],"sourceRoot":""}