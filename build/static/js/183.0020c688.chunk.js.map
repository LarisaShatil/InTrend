{"version":3,"file":"static/js/183.0020c688.chunk.js","mappings":"wKAEaA,EAAe,WAAO,IAAD,IAC1BC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAAC,KAAD,CACEC,GAAE,iBAAEF,QAAF,IAAEA,GAAF,UAAEA,EAAUG,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,IAC7BC,KAAK,SAFP,kC,qOCGAC,GAAYC,EAAAA,EAAAA,IAAW,SAAoBC,EAAOC,GACpD,OAA8CC,EAAAA,EAAAA,IAAiBF,GAAvDG,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,cAAkBC,GAArC,YACMC,GAASC,EAAAA,EAAAA,IAAe,YAAaP,GAC3C,OAAuBQ,EAAAA,EAAAA,KACrBC,EAAAA,EAAAA,KADwB,QAAC,QAGvBR,IAAAA,EACAE,WAAWO,EAAAA,EAAAA,IAAG,mBAAoBP,IAC/BE,GALmB,IAMtBM,OAAO,kBACFL,GACAF,GAAiB,CAClBQ,QAAS,OACTC,cAAe,SACfC,WAAY,iBAMtBhB,EAAUiB,YAAc,Y,4CC3BXC,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAGxBC,GAOED,EARFE,GAQEF,EAPFC,aACAE,EAMEH,EANFG,MACAC,EAKEJ,EALFI,KACAC,EAIEL,EAJFK,aACAC,EAGEN,EAHFM,aACAC,EAEEP,EAFFO,SACAC,EACER,EADFQ,OAGF,OACE,+BACE,SAAC3B,EAAD,CAAW4B,GAAG,UAAUC,SAAS,MAAMC,aAAa,KAAKC,EAAE,IAA3D,UACE,UAAC,KAAD,CAAKjB,QAAQ,OAAb,WACE,SAAC,KAAD,WACE,SAAC,IAAD,CACEgB,aAAa,KACbE,UAAU,QACVH,SAAS,QACTI,UAAU,QACVC,IACEd,EAAW,yCAC2BA,GAD3B,+CAIbe,IAAKb,GAASC,OAGlB,UAAC,KAAD,CAAKa,GAAG,IAAR,WACE,UAAC,IAAD,CAASR,GAAG,KAAKS,KAAK,KAAtB,UACGf,GAASC,EADZ,KACoBC,EAAac,MAAM,EAAG,GAD1C,QAGA,SAAC,IAAD,CAASV,GAAG,KAAKS,KAAK,KAAKE,MAAM,QAAjC,sBACA,UAAC,IAAD,WAAOC,KAAKC,MAAOhB,EAAe,GAAM,KAAxC,OACCC,GACC,iCACE,SAAC,IAAD,CAASE,GAAG,KAAKS,KAAK,KAAKE,MAAM,QAAjC,yBACA,SAAC,IAAD,UAAOb,QAGT,yBAEF,SAAC,IAAD,CAASE,GAAG,KAAKS,KAAK,KAAKE,MAAM,QAAjC,sBACA,SAAC,IAAD,UAAOZ,EAAOe,KAAI,SAAAC,GAAK,OAAIA,EAAMpB,QAAMqB,KAAK,mB,UCKxD,EA3CqB,WACnB,IAAMlD,GAAWC,EAAAA,EAAAA,MACjB,GAA0BkD,EAAAA,EAAAA,UAAS,MAAnC,eAAO1B,EAAP,KAAc2B,EAAd,KACOC,GAAYC,EAAAA,EAAAA,MAAZD,QAWP,OATAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaH,GACVI,MAAK,SAAAC,GACNN,EAASM,QAGV,CAACL,IAGC5B,GAKH,iCACE,SAAC1B,EAAA,EAAD,KACA,SAACyB,EAAD,CAAWC,MAAOA,KAClB,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMtB,MAAOH,EAASG,MAAOD,GAAG,OAAhC,qBAIF,yBACE,SAAC,KAAD,CAAMC,MAAOH,EAASG,MAAOD,GAAG,UAAhC,0BAKJ,mBACA,SAAC,EAAAyD,SAAD,CAAUC,SAAU,KAApB,UACC,SAAC,KAAD,SAtBI","sources":["components/ReturnButton.js","../node_modules/@chakra-ui/layout/dist/chunk-SRMZVY4F.mjs","components/MovieCard.js","pages/MovieDetails.js"],"sourcesContent":["import { NavLink, useLocation } from 'react-router-dom';\r\n\r\nexport const ReturnButton = () => {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <NavLink\r\n      to={location?.state?.from ?? '/'}\r\n      type=\"button\"\r\n    >\r\n      ⬅ Return back\r\n    </NavLink>\r\n  );\r\n};\r\n","// src/container.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Container = forwardRef(function Container2(props, ref) {\n  const { className, centerContent, ...rest } = omitThemingProps(props);\n  const styles = useStyleConfig(\"Container\", props);\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      className: cx(\"chakra-container\", className),\n      ...rest,\n      __css: {\n        ...styles,\n        ...centerContent && {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\"\n        }\n      }\n    }\n  );\n});\nContainer.displayName = \"Container\";\n\nexport {\n  Container\n};\n","import { Heading, Container, Text, Box, Image } from '@chakra-ui/react';\r\n\r\nexport const MovieCard = ({ movie }) => {\r\n  const {\r\n    id,\r\n    poster_path,\r\n    title,\r\n    name,\r\n    release_date,\r\n    vote_average,\r\n    overview,\r\n    genres,\r\n  } = movie;\r\n\r\n  return (\r\n    <>\r\n      <Container as='section' maxWidth='4xl' borderRadius='lg' p='4'>\r\n        <Box display='flex'>\r\n          <Box>\r\n            <Image\r\n              borderRadius='lg'\r\n              objectFit='cover'\r\n              maxWidth='480px'\r\n              maxHeight='362px'\r\n              src={\r\n                poster_path\r\n                  ? `https://image.tmdb.org/t/p/w500${poster_path}`\r\n                  : `http://blog.aspneter.com/Images/no-thumb.jpg`\r\n              }\r\n              alt={title || name}\r\n            />\r\n          </Box>\r\n          <Box ml='4'>\r\n            <Heading as='h2' size='lg' >\r\n              {title || name} ({release_date.slice(0, 4)})\r\n            </Heading>\r\n            <Heading as='h3' size='md' color='white'>Score: </Heading>\r\n            <Text>{Math.round((vote_average / 10) * 100)}%</Text>\r\n            {overview ? (\r\n              <>\r\n                <Heading as='h3' size='md' color='white'>Overview: </Heading>\r\n                <Text>{overview}</Text>\r\n              </>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            <Heading as='h3' size='md' color='white'>Genres:</Heading>\r\n            <Text>{genres.map(genre => genre.name).join(', ')}</Text>\r\n          </Box>\r\n        </Box>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n","// сторінка з детальною інформацією про кінофільм\r\n\r\nimport { Suspense, useEffect, useState } from \"react\";\r\nimport { Outlet, Link, useLocation, useParams } from \"react-router-dom\";\r\n\r\nimport { getMovieById } from \"services/services\";\r\nimport { MovieCard } from \"../components/MovieCard\";\r\nimport { ReturnButton } from \"../components/ReturnButton\";\r\n\r\nconst MovieDetails = () => {\r\n  const location = useLocation();\r\n  const [movie, setMovie] = useState(null);\r\n  const {movieId}  = useParams();\r\n\r\n  useEffect(() => {\r\n    getMovieById(movieId)\r\n      .then(data => {\r\n      setMovie(data);\r\n    });\r\n    \r\n  }, [movieId]);\r\n\r\n\r\n  if (!movie) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ReturnButton />\r\n      <MovieCard movie={movie} />\r\n      <h2>Additional information</h2>\r\n      <ul>\r\n        <li>\r\n          <Link state={location.state} to=\"cast\">\r\n            Cast\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link state={location.state} to=\"reviews\">\r\n            Review\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n      <hr />\r\n      <Suspense fallback={null}>\r\n       <Outlet/>\r\n      </Suspense>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieDetails;"],"names":["ReturnButton","location","useLocation","to","state","from","type","Container","forwardRef","props","ref","omitThemingProps","className","centerContent","rest","styles","useStyleConfig","jsx","chakra","cx","__css","display","flexDirection","alignItems","displayName","MovieCard","movie","poster_path","id","title","name","release_date","vote_average","overview","genres","as","maxWidth","borderRadius","p","objectFit","maxHeight","src","alt","ml","size","slice","color","Math","round","map","genre","join","useState","setMovie","movieId","useParams","useEffect","getMovieById","then","data","Suspense","fallback"],"sourceRoot":""}